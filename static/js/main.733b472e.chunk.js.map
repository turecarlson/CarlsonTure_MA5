{"version":3,"sources":["components/ChildCell.jsx","components/ParentCell.jsx","App.jsx","index.js"],"names":["ChildCell","props","state","cellColor","handleClick","bind","this","setState","incFun","decFun","onClick","className","React","Component","ParentCell","activeCellCount","incCount","decCount","getActiveCellCount","App","document","title","ReactDOM","render","getElementById"],"mappings":"qUAGqBA,E,kDAMjB,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IALVC,MAAQ,CACJC,UAAW,SAKX,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAFJ,E,+CAKnB,WAC+B,SAAxBC,KAAKJ,MAAMC,WACVG,KAAKC,SAAS,CAACJ,UAAW,UAC1BG,KAAKL,MAAMO,WAEXF,KAAKC,SAAS,CAACJ,UAAW,UAC1BG,KAAKL,MAAMQ,Y,oBAInB,WACI,OACI,qBAAKC,QAASJ,KAAKF,YACfO,UAAW,yBAA2BL,KAAKJ,MAAMC,gB,GAxB1BS,IAAMC,WCCxBC,G,wDAMjB,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IALVC,MAAQ,CACJa,gBAAiB,GAKjB,EAAKC,SAAW,EAAKA,SAASX,KAAd,gBAChB,EAAKY,SAAW,EAAKA,SAASZ,KAAd,gBAHD,E,sDAMnB,WACI,OAAOC,KAAKJ,MAAMa,kB,sBAGtB,WACIT,KAAKC,SAAS,CACVQ,kBAAmBT,KAAKJ,MAAMa,oB,sBAItC,WACIT,KAAKC,SAAS,CACVQ,kBAAmBT,KAAKJ,MAAMa,oB,oBAItC,WACI,OACI,sBAAKJ,UAAU,cAAf,UACI,yCAAYL,KAAKY,wBACjB,sBAAKP,UAAU,mBAAf,UACI,cAAC,EAAD,CAAWH,OAAQF,KAAKU,SAAUP,OAAQH,KAAKW,WAC/C,cAAC,EAAD,CAAWT,OAAQF,KAAKU,SAAUP,OAAQH,KAAKW,WAC/C,cAAC,EAAD,CAAWT,OAAQF,KAAKU,SAAUP,OAAQH,KAAKW,WAC/C,cAAC,EAAD,CAAWT,OAAQF,KAAKU,SAAUP,OAAQH,KAAKW,qB,GApC3BL,IAAMC,YCCzBM,G,kKAEjB,WAEI,OADAC,SAASC,MAAQ,qBAEb,qBAAKV,UAAU,MAAf,SACI,cAAC,EAAD,U,GANiBC,IAAMC,Y,MCkBvCS,IAASC,OAAO,cAAC,EAAD,IAASH,SAASI,eAAe,W","file":"static/js/main.733b472e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './css/ChildCell.css';\r\n\r\nexport default class ChildCell extends React.Component {\r\n\r\n    state = {\r\n        cellColor: 'white'\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    \r\n    handleClick() {\r\n        if(this.state.cellColor == 'white') {\r\n            this.setState({cellColor: 'black'});\r\n            this.props.incFun();\r\n        } else {\r\n            this.setState({cellColor: 'white'});\r\n            this.props.decFun();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div onClick={this.handleClick} \r\n                className={'child-cell cell-color-' + this.state.cellColor}\r\n            />\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport ChildCell from './ChildCell';\r\nimport './css/ParentCell.css';\r\n\r\nexport default class ParentCell extends React.Component {\r\n    \r\n    state = {\r\n        activeCellCount: 0\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.incCount = this.incCount.bind(this);\r\n        this.decCount = this.decCount.bind(this);\r\n    }\r\n\r\n    getActiveCellCount() {\r\n        return this.state.activeCellCount;\r\n    }\r\n\r\n    incCount() {\r\n        this.setState({\r\n            activeCellCount: ++this.state.activeCellCount\r\n        });\r\n    }\r\n\r\n    decCount() {\r\n        this.setState({\r\n            activeCellCount: --this.state.activeCellCount\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className='parent-cell'>\r\n                <h1>Count: {this.getActiveCellCount()}</h1>\r\n                <div className='child-containter'>\r\n                    <ChildCell incFun={this.incCount} decFun={this.decCount} />\r\n                    <ChildCell incFun={this.incCount} decFun={this.decCount} />\r\n                    <ChildCell incFun={this.incCount} decFun={this.decCount} />\r\n                    <ChildCell incFun={this.incCount} decFun={this.decCount} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React from 'react';\r\nimport ParentCell from './components/ParentCell';\r\n\r\nimport './App.css';\r\n\r\nexport default class App extends React.Component {\r\n\r\n    render() {\r\n        document.title = 'MA5 - Ture Carlson'; //Set the page title in the document\r\n        return (\r\n            <div className='app'>\r\n                <ParentCell />\r\n            </div>\r\n        );\r\n    }\r\n}","/*\r\nThis code will be acting as the entryway into the code and will kickoff the React components.\r\n\r\n\"the import X from 'Y';\" is how we'll pull functions/classes from libraries!  You'll be doing this a lot.\r\n\r\nReactDOM, and especially React, are libraries we'll need to import from to get React working.\r\n\r\nApp and App.jsx haven't been made yet (we'll get to that soon).  This will be our first component.\r\n\r\nimport './index.css' is how we'll import styling when necessary.  If we want to use a styling\r\nlibrary like Bootstrap or Material-UI, we'll want to install a library and then import it like\r\none of these libraries\r\n\r\nReactDOM.render isn't logic you need to spend too much time with, but it's basically saying that\r\nit's going to be rendering the React component App (which we'll create in a second) on the root\r\nelement of the HTML document (this is actually using the DOM API to find this element!)\r\n*/\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App.jsx';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}